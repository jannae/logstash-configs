filter {

############################################################
# Kippo honeypot
#
# Session should be: sensor-srcip-sessioncount
#
# TODOS:
#   * HoneyPotTransport filters
#   *
#
  if [type] == "kippo" {

    if ( [message] =~ "login return" or [message] =~ "first time for" or [message] =~ "login attempt: " or [message] =~ "trying auth" or [message] =~ "remote eof" or [message] =~ "remote close" or [message] =~ "sending close" or [message] =~ "sending eof" or [message] =~ "connection lost" or [message] =~ "\] channel open" or [message] =~ "\] getting shell" or [message] =~ "Terminal Size" or [message] =~ "Opening TTY Log:" or [message] =~ "already tried this combination" or [message] =~ "CMD" or [message] =~ "\[SSHService ssh-connection" or [message] =~ "\[-\] " or [message] =~ "\] starting service ssh-connection" or [message] =~ "\[HoneyPotTransport" or [message] =~ " authenticated " or [message] =~ " unauthorized login: " or [message] =~ "sending request exit-status" or [message] =~ "Reading txtcmd from" or [message] =~ "\] got eof") {
      drop {}
    }
    else if ( [message] =~ "\] Unhandled Error" ) {
      grok {
        match => ["message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[SSHChannel session \(%{NUMBER:chsession}\) on SSHService ssh-connection on HoneyPotTransport,%{DATA:kippo-session},%{IP:srcip}\] Unhandled Error %{GREEDYDATA:exception-error}"]
      }
      mutate {
          add_field => {
            "sessiontest" => "%{honeypotname}-%{srcip}-%{kippo-session}"
          }
          strip => [ "kippo-session", "chsession", "srcip", "exception-error" ]
        }
    }
    else if ( [message] =~ "\[SSHChannel session" ) {
      if( [message] =~ "\] Command" ) {
        grok {
          match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[SSHChannel session \(%{NUMBER:chsession}\) on SSHService ssh-connection on HoneyPotTransport,%{DATA:kippo-session},%{IP:srcip}\] %{DATA:cmd-status}: %{GREEDYDATA:cmd-input}"]
        }
        mutate {
          add_field => {
            "sessiontest" => "%{honeypotname}-%{srcip}-%{kippo-session}"
          }
          strip => [ "kippo-session", "chsession", "srcip", "cmd-status", "cmd-input" ]
        }
      }
      else if( [message] =~ "\] executing command" ) {
        grok {
          match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[SSHChannel session \(%{NUMBER:chsession}\) on SSHService ssh-connection on HoneyPotTransport,%{DATA:kippo-session},%{IP:srcip}\] executing command \"%{GREEDYDATA:cmd-input-multi}\""]
        }
        mutate {
          add_field => {
            "sessiontest" => "%{honeypotname}-%{srcip}-%{kippo-session}"
          }
          strip => [ "kippo-session", "chsession", "srcip", "cmd-status", "cmd-input" ]
        }
      }
      else if( [message] =~ "\] INPUT:" ) {
        grok {
          match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[SSHChannel session \(%{NUMBER:chsession}\) on SSHService ssh-connection on HoneyPotTransport,%{DATA:kippo-session},%{IP:srcip}\] INPUT: %{GREEDYDATA:cmd-input}"]
        }
        mutate {
          add_field => {
            "sessiontest" => "%{honeypotname}-%{srcip}-%{kippo-session}"
          }
          strip => [ "kippo-session", "chsession", "srcip", "cmd-input" ]
        }
      }
      else if ( [message] =~ "pty request") {
        grok {
          match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[SSHChannel session \(%{NUMBER:chsession}\) on SSHService ssh-connection on HoneyPotTransport,%{DATA:kippo-session},%{IP:srcip}\] pty request: %{GREEDYDATA:pseudoterm}" ]
        }
        mutate {
          add_field => {
            "sessiontest" => "%{honeypotname}-%{srcip}-%{kippo-session}"
          }
          strip => [ "kippo-session", "chsession", "srcip", "pseudoterm" ]
        }
      }
      else if ( [message] =~ "Closing TTY Log") {
        grok {
          match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[SSHChannel session \(%{NUMBER:chsession}\) on SSHService ssh-connection on HoneyPotTransport,%{DATA:kippo-session},%{IP:srcip}\] Closing TTY Log: log%{URIPATHPARAM:ttylog}" ]
        }
        mutate {
          add_field => {
            "sessiontest" => "%{honeypotname}-%{srcip}-%{kippo-session}"
            "ttyloglink" => "%{honeypotname}%{ttylog}"
          }
          strip => [ "kippo-session", "chsession", "srcip", "pseudoterm" ]
        }
      }
      else if ( [message] =~ "\] request_env:") {
        grok {
          match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[SSHChannel session \(%{NUMBER:chsession}\) on SSHService ssh-connection on HoneyPotTransport,%{DATA:kippo-session},%{IP:srcip}\] request_env: %{GREEDYDATA:cmd_env}" ]
        }
        mutate {
          add_field => {
            "sessiontest" => "%{honeypotname}-%{srcip}-%{kippo-session}"
            "ttyloglink" => "%{honeypotname}%{ttylog}"
          }
          strip => [ "kippo-session", "chsession", "srcip", "cmd_env" ]
        }
      }
      else if ( [message] =~ "Starting factory") {
        grok {
          match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[SSHChannel session \(%{NUMBER:chsession}\) on SSHService ssh-connection on HoneyPotTransport,%{DATA:kippo-session},%{IP:srcip}\] Starting factory <HTTPProgressDownloader: %{URI:malware-uri}>" ]
        }
        mutate {
          add_field => {
            "sessiontest" => "%{honeypotname}-%{srcip}-%{kippo-session}"
            "ttyloglink" => "%{honeypotname}%{ttylog}"
          }
          strip => [ "kippo-session", "chsession", "srcip", "pseudoterm", "malware-uri" ]
        }
      }
      else {
        grok {
          match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[SSHChannel session \(%{NUMBER:chsession}\) on SSHService ssh-connection on HoneyPotTransport,%{DATA:kippo-session},%{IP:srcip}\] %{GREEDYDATA:not_caught}" ]
        }
        mutate {
          add_field => {
            "sessiontest" => "%{honeypotname}-%{srcip}-%{kippo-session}"
          }
          strip => [ "kippo-session", "chsession", "srcip", "not_caught" ]
        }
      }
      mutate {
        add_field => {
          "kippo-type" => "interactive"
        }
      }
    }
    else if ( [message] =~ "\[SSHChannel None" ) {
      if ( [message] =~ "received data" ) {
        grok {
          match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[SSHChannel None \(%{NUMBER:chsession}\) on SSHService ssh-connection on HoneyPotTransport,%{DATA:kippo-session},%{IP:srcip}\] received data %{GREEDYDATA:rinput}" ]
        }
        mutate {
          add_field => {
            "sessiontest" => "%{honeypotname}-%{srcip}-%{kippo-session}"
          }
          strip => [ "kippo-session", "chsession", "srcip", "rinput" ]
        }
      }
      else if ( [message] =~ " Faking channel open " ) {
        grok {
          match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[SSHChannel None \(%{NUMBER:chsession}\) on SSHService ssh-connection on HoneyPotTransport,%{DATA:kippo-session},%{IP:srcip}\] Faking channel open %{DATA:dstip}:%{NUMBER:dstport}" ]
        }
        mutate {
          add_field => {
            "sessiontest" => "%{honeypotname}-%{srcip}-%{kippo-session}"
          }
          strip => [ "kippo-session", "chsession", "srcip", "dstip", "dstport" ]
        }
      }
      else {
        grok {
          match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[SSHChannel None \(%{NUMBER:chsession}\) on SSHService ssh-connection on HoneyPotTransport,%{DATA:kippo-session},%{IP:srcip}\] %{GREEDYDATA:not_caught}" ]
        }
        mutate {
          add_field => {
            "sessiontest" => "%{honeypotname}-%{srcip}-%{kippo-session}"
          }
          strip => [ "kippo-session", "chsession", "srcip", "not_caught" ]
        }
      }
      mutate {
        add_field => {
          "kippo-type" => "sshchannel"
        }
      }
    }
    else if ( [message] =~ "\[SSHService ssh-userauth on HoneyPotTransport" ) {
      if ( [message] =~ " login attempt " ) {
        grok {
        match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[SSHService ssh-userauth on HoneyPotTransport,%{DATA:kippo-session},%{IP:srcip}\] login attempt \[%{DATA:kippo-username}/%{DATA:kippo-password}\] %{WORD:kippo-authstatus}" ]
        }
        mutate {
          add_field => {
            "sessiontest" => "%{honeypotname}-%{srcip}-%{kippo-session}"
          }
          strip => [ "kippo-session", "srcip", "kippo-authstatus" ]
        }
      }
      else if ( [message] =~ " auth " ) {
        grok {
          match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[SSHService ssh-userauth on HoneyPotTransport,%{DATA:kippo-session},%{IP:srcip}\] %{DATA:kippo-username} %{WORD:kippo-authstatus} auth %{WORD:kippo-authmethod}" ]
        }
        mutate {
          add_field => {
            "sessiontest" => "%{honeypotname}-%{srcip}-%{kippo-session}"
          }
          strip => [ "kippo-session", "srcip", "kippo-authmethod", "kippo-authstatus" ]
        }
      }
      else if ( [message] =~ " public key attempt " ) {
        grok {
          match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[SSHService ssh-userauth on HoneyPotTransport,%{DATA:kippo-session},%{IP:srcip}\] public key attempt for user %{DATA:kippo-username} with fingerprint %{GREEDYDATA:pubkey}" ]
        }
        mutate {
          add_field => {
            "kippo-authmethod" => "publickey"
            "sessiontest" => "%{honeypotname}-%{srcip}-%{kippo-session}"
          }
          strip => [ "kippo-session", "srcip", "kippo-authmethod", "kippo-authstatus", "pubkey" ]
        }
      }
      mutate {
        add_field => {
          "kippo-type" => "ssh-userauth"
        }
      }
    }
    else if ( [message] =~ "\[HTTPPageDownloader" ) {
      grok {
        match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[HTTPPageDownloader,client\] %{GREEDYDATA:httplog}" ]
      }
      mutate {
        add_field => {
          "kippo-type" => "http-page-downloader"
        }
        # strip => [ "httplog" ]
      }
    }
    else if ( [message] =~ "\[kippo.core.ssh.HoneyPotSSHFactory\] New connection:" ) {
      grok {
        match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[kippo.core.ssh.HoneyPotSSHFactory\] New connection: %{IP:srcip}:%{DATA:srcport} \(%{IP:dstip}:%{DATA:dstport}\) \[session: %{DATA:kippo-session}\]" ]
      }
      mutate {
        add_field => {
          "kippo-type" => "connection"
          "sessiontest" => "%{honeypotname}-%{srcip}-%{kippo-session}"
        }
        strip => [ "kippo-session", "srcip", "dstip", "srcport", "dstport" ]
      }
    }
    else if ( [message] =~ "\[kippo.core.ssh.HoneyPotSSHFactory\] Exception " or [message] =~ "\[kippo.core.ssh.HoneyPotSSHFactory\] Rollback " or [message] =~ "\[kippo.core.ssh.HoneyPotSSHFactory\] RCP:") {
      grok {
        match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[kippo.core.ssh.HoneyPotSSHFactory\] %{GREEDYDATA:exception-error}" ]
      }
      mutate {
        add_field => {
          "kippo-type" => "exception"
        }
        strip => [ "exception-error" ]
      }
    }
    mutate {
      add_field => {
        "timestamp" => "%{year}-%{month}-%{day} %{time}"
        "sensortest" => "%{honeypotname}"
      }
    }
    date {
      locale => "en"
      match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss" ]
    }
  }
}
