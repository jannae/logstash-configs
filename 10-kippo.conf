filter {

############################################################
# Kippo honeypot
#
# Session should be: sensor-srcip-sessioncount
#
  if [type] == "kippo" {

    if ( [message] =~ "login return" or [message] =~ "first time for" or [message] =~ "login attempt: " or [message] =~ "trying auth" or [message] =~ "remote eof" or [message] =~ "remote close" or [message] =~ "sending close" or [message] =~ "^\t" or [message] =~ "connection lost" or [message] =~ "\[HoneyPotTransport" or [message] =~ "failed auth password" or [message] =~ "unauthorized login" or [message] =~ "\treason: " or [message] =~ "\[SSHChannel session" or [message] =~ "\[SSHService ssh-connection" or [message] =~ "\] starting service ssh-connection" or [message] =~ "\[-\] " ) {
      drop {}
    }
    else if ( [message] =~ "\[SSHChannel None" and [message] =~ " received data " ) {
      grok {
        match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[SSHChannel None \(%{NUMBER:chsession}\) on SSHService ssh-connection on HoneyPotTransport,%{DATA:kippo-session},%{IP:srcip}\] received data %{GREEDYDATA:rinput}" ]
      }
      mutate {
        add_field => {
          "kippo-type" => "sshchannel"
          "sessiontest" => "%{honeypotname}-%{srcip}-%{kippo-session}"
        }
        strip => [ "kippo-session", "chsession", "srcip", "rinput" ]
      }
    }
    else if ( [message] =~ "\[SSHChannel None" and [message] =~ " Faking channel open ") {
      grok {
        match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[SSHChannel None \(%{NUMBER:chsession}\) on SSHService ssh-connection on HoneyPotTransport,%{DATA:kippo-session},%{IP:srcip}\] Faking channel open %{DATA:dstip}:%{NUMBER:dstport}" ]
      }
      mutate {
        add_field => {
          "kippo-type" => "sshchannel"
          "sessiontest" => "%{honeypotname}-%{srcip}-%{kippo-session}"
        }
        strip => [ "kippo-session", "chsession", "srcip", "dstip", "dstport" ]
      }
    }
    else if ( [message] =~ "\[SSHService ssh-userauth on HoneyPotTransport" and [message] =~ " login attempt ") {
      grok {
        match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[SSHService ssh-userauth on HoneyPotTransport,%{DATA:kippo-session},%{IP:srcip}\] login attempt \[%{DATA:kippo-username}/%{DATA:kippo-password}\] %{WORD:kippo-authstatus}" ]
      }
      mutate {
        add_field => {
          "kippo-type" => "credentials"
          "sessiontest" => "%{honeypotname}-%{srcip}-%{kippo-session}"
        }
        strip => [ "kippo-session", "srcip", "kippo-authstatus" ]
      }
    }
    else if ( [message] =~ "\[SSHService ssh-userauth on HoneyPotTransport" and [message] =~ " auth ") {
      grok {
        match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[SSHService ssh-userauth on HoneyPotTransport,%{DATA:kippo-session},%{IP:srcip}\] %{DATA:kippo-username} %{WORD:kippo-authstatus} auth %{WORD:kippo-authmethod}" ]
      }
      mutate {
        add_field => {
          "kippo-type" => "authentication-method"
          "sessiontest" => "%{honeypotname}-%{srcip}-%{kippo-session}"
        }
        strip => [ "kippo-session", "srcip", "kippo-authmethod", "kippo-authstatus" ]
      }
    }
    else if ( [message] =~ "\[SSHService ssh-userauth on HoneyPotTransport" and [message] =~ " authenticated ") {
      grok {
        match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[SSHService ssh-userauth on HoneyPotTransport,%{DATA:kippo-session},%{IP:srcip}\] %{DATA:kippo-username} %{WORD:kippo-authstatus} with %{WORD:kippo-authmethod}" ]
      }
      mutate {
        add_field => {
          "kippo-type" => "authentication-method"
          "sessiontest" => "%{honeypotname}-%{srcip}-%{kippo-session}"
        }
        strip => [ "kippo-session", "srcip", "kippo-authmethod", "kippo-authstatus" ]
      }
    }
    else if ( [message] =~ "\[HTTPPageDownloader") {
      grok {
        match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[HTTPPageDownloader,client\] %{GREEDYDATA:httplog}" ]
      }
      mutate {
        add_field => {
          "kippo-type" => "http-page-downloader"
        }
        strip => [ "httplog" ]
      }
    }
    else if ( [message] =~ "\[kippo.core.ssh.HoneyPotSSHFactory\] New connection:") {
      grok {
        match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[kippo.core.ssh.HoneyPotSSHFactory\] New connection: %{IP:srcip}:%{DATA:srcport} \(%{IP:dstip}:%{DATA:dstport}\) \[session: %{DATA:kippo-session}\]" ]
      }
      mutate {
        add_field => {
          "kippo-type" => "connection"
          "sessiontest" => "%{honeypotname}-%{srcip}-%{kippo-session}"
        }
        strip => [ "kippo-session", "srcip", "dstip", "srcport", "dstport" ]
      }
    }
    else if ( [message] =~ "\[kippo.core.ssh.HoneyPotSSHFactory\] Exception " or [message] =~ "\[kippo.core.ssh.HoneyPotSSHFactory\] Rollback " or [message] =~ "\[kippo.core.ssh.HoneyPotSSHFactory\] RCP:") {
      grok {
        match => [ "message", "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time}%{ISO8601_TIMEZONE} \[kippo.core.ssh.HoneyPotSSHFactory\] %{GREEDYDATA:exception-error}" ]
      }
      mutate {
        add_field => {
          "kippo-type" => "exception"
        }
        strip => [ "exception-error" ]
      }
    }
    mutate {
      add_field => {
        "timestamp" => "%{year}-%{month}-%{day} %{time}"
        "sensortest" => "%{honeypotname}"
      }
    }
    date {
      locale => "en"
      match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss" ]
    }
  }
}
